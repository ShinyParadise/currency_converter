# Generated by Django 5.2.1 on 2025-05-22 13:09

from django.db import migrations
from decimal import Decimal

def populate_currencies(apps, schema_editor):
    Currency = apps.get_model('converter', 'Currency')
    if not Currency.objects.exists():
        currencies_data = [
            {'code': 'USD', 'name': 'US Dollar', 'symbol': '$'},
            {'code': 'EUR', 'name': 'Euro', 'symbol': '€'},
            {'code': 'GBP', 'name': 'British Pound', 'symbol': '£'},
            {'code': 'JPY', 'name': 'Japanese Yen', 'symbol': '¥'},
            {'code': 'RUB', 'name': 'Russian Ruble', 'symbol': '₽'},
        ]
        for currency_data in currencies_data:
            Currency.objects.create(**currency_data)

        ExchangeRate = apps.get_model('converter', 'ExchangeRate')
        
        try:
            usd = Currency.objects.get(code='USD')
            eur = Currency.objects.get(code='EUR')
            rub = Currency.objects.get(code='RUB')

            initial_rates_data = [
                {'from_currency': usd, 'to_currency': eur, 'rate': Decimal('0.92'), 'user': None},
                {'from_currency': eur, 'to_currency': usd, 'rate': Decimal('1.08'), 'user': None},
                {'from_currency': usd, 'to_currency': rub, 'rate': Decimal('91.50'), 'user': None},
                {'from_currency': rub, 'to_currency': usd, 'rate': Decimal('0.0109'), 'user': None},
                {'from_currency': eur, 'to_currency': rub, 'rate': Decimal('99.45'), 'user': None},
                {'from_currency': rub, 'to_currency': eur, 'rate': Decimal('0.0101'), 'user': None},
            ]

            for rate_data in initial_rates_data:
                ExchangeRate.objects.get_or_create(
                    from_currency=rate_data['from_currency'],
                    to_currency=rate_data['to_currency'],
                    user=rate_data['user'],
                    defaults={'rate': rate_data['rate']}
                )
        except Currency.DoesNotExist:
            print("Предупреждение: Не удалось найти одну или несколько стандартных валют (USD, EUR, RUB) для создания стандартных обменных курсов.")


class Migration(migrations.Migration):

    dependencies = [
        ('converter', '0001_initial'),
    ]

    operations = [
        migrations.RunPython(populate_currencies),
    ]
